// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Taskforce /> @render should render as expected with default props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Taskforce />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className={undefined}
        >
          Taskforces
        </h1>,
        <div
          className={undefined}
        >
          <ArrowButton
            action={[Function]}
            direction="left"
          />
          <h2
            className={undefined}
          >
            Britain
          </h2>
          <ArrowButton
            action={[Function]}
            direction="right"
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Taskforces",
          "className": undefined,
        },
        "ref": null,
        "rendered": "Taskforces",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ArrowButton
              action={[Function]}
              direction="left"
            />,
            <h2
              className={undefined}
            >
              Britain
            </h2>,
            <ArrowButton
              action={[Function]}
              direction="right"
            />,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "action": [Function],
              "direction": "left",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Britain",
              "className": undefined,
            },
            "ref": null,
            "rendered": "Britain",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "action": [Function],
              "direction": "right",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className={undefined}
          >
            Taskforces
          </h1>,
          <div
            className={undefined}
          >
            <ArrowButton
              action={[Function]}
              direction="left"
            />
            <h2
              className={undefined}
            >
              Britain
            </h2>
            <ArrowButton
              action={[Function]}
              direction="right"
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Taskforces",
            "className": undefined,
          },
          "ref": null,
          "rendered": "Taskforces",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ArrowButton
                action={[Function]}
                direction="left"
              />,
              <h2
                className={undefined}
              >
                Britain
              </h2>,
              <ArrowButton
                action={[Function]}
                direction="right"
              />,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "action": [Function],
                "direction": "left",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Britain",
                "className": undefined,
              },
              "ref": null,
              "rendered": "Britain",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "action": [Function],
                "direction": "right",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
