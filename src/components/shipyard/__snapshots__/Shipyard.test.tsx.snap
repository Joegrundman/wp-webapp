// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Shipyard /> @render should render as expected with default props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Shipyard />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className={undefined}
        >
          Shipyards
        </h1>,
        <div
          className={undefined}
        >
          <ArrowButton
            action={[Function]}
            direction="left"
          />
          <h2
            className={undefined}
          >
            Atlantic
          </h2>
          <ArrowButton
            action={[Function]}
            direction="right"
          />
        </div>,
        <div
          className={undefined}
          style={
            Object {
              "width": 300,
            }
          }
        >
          <canvas
            className={undefined}
            height={470}
            id="shipyardCanvasBackground"
            width={300}
          />
          <canvas
            className={undefined}
            height={470}
            id="shipyardCanvas"
            width={300}
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Shipyards",
          "className": undefined,
        },
        "ref": null,
        "rendered": "Shipyards",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ArrowButton
              action={[Function]}
              direction="left"
            />,
            <h2
              className={undefined}
            >
              Atlantic
            </h2>,
            <ArrowButton
              action={[Function]}
              direction="right"
            />,
          ],
          "className": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "action": [Function],
              "direction": "left",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Atlantic",
              "className": undefined,
            },
            "ref": null,
            "rendered": "Atlantic",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "action": [Function],
              "direction": "right",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <canvas
              className={undefined}
              height={470}
              id="shipyardCanvasBackground"
              width={300}
            />,
            <canvas
              className={undefined}
              height={470}
              id="shipyardCanvas"
              width={300}
            />,
          ],
          "className": undefined,
          "style": Object {
            "width": 300,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": undefined,
              "height": 470,
              "id": "shipyardCanvasBackground",
              "width": 300,
            },
            "ref": null,
            "rendered": null,
            "type": "canvas",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": undefined,
              "height": 470,
              "id": "shipyardCanvas",
              "width": 300,
            },
            "ref": null,
            "rendered": null,
            "type": "canvas",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className={undefined}
          >
            Shipyards
          </h1>,
          <div
            className={undefined}
          >
            <ArrowButton
              action={[Function]}
              direction="left"
            />
            <h2
              className={undefined}
            >
              Atlantic
            </h2>
            <ArrowButton
              action={[Function]}
              direction="right"
            />
          </div>,
          <div
            className={undefined}
            style={
              Object {
                "width": 300,
              }
            }
          >
            <canvas
              className={undefined}
              height={470}
              id="shipyardCanvasBackground"
              width={300}
            />
            <canvas
              className={undefined}
              height={470}
              id="shipyardCanvas"
              width={300}
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Shipyards",
            "className": undefined,
          },
          "ref": null,
          "rendered": "Shipyards",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ArrowButton
                action={[Function]}
                direction="left"
              />,
              <h2
                className={undefined}
              >
                Atlantic
              </h2>,
              <ArrowButton
                action={[Function]}
                direction="right"
              />,
            ],
            "className": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "action": [Function],
                "direction": "left",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Atlantic",
                "className": undefined,
              },
              "ref": null,
              "rendered": "Atlantic",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "action": [Function],
                "direction": "right",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <canvas
                className={undefined}
                height={470}
                id="shipyardCanvasBackground"
                width={300}
              />,
              <canvas
                className={undefined}
                height={470}
                id="shipyardCanvas"
                width={300}
              />,
            ],
            "className": undefined,
            "style": Object {
              "width": 300,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": undefined,
                "height": 470,
                "id": "shipyardCanvasBackground",
                "width": 300,
              },
              "ref": null,
              "rendered": null,
              "type": "canvas",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": undefined,
                "height": 470,
                "id": "shipyardCanvas",
                "width": 300,
              },
              "ref": null,
              "rendered": null,
              "type": "canvas",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
